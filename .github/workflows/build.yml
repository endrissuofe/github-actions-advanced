name: Build and Test Node.js Application

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  
jobs:
  code-quality:
    name: Code Quality Assessment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install project dependencies
        run: npm ci
        
      - name: Run ESLint code analysis
        run: npm run lint || exit 1

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4  # Updated to v4
        if: always()
        with:
          name: eslint-results
          path: eslint-report.json

  testing:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Execute test suite with coverage
        run: npm test
        
      - name: Generate test coverage report
        run: npm run test -- --coverage --coverageReporters=lcov
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: node-${{ matrix.node-version }}

  build-application:
    name: Build Production Bundle
    runs-on: ubuntu-latest
    needs: [code-quality, testing]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build production artifacts
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: production-build-${{ github.sha }}
          path: dist/
          retention-days: 30